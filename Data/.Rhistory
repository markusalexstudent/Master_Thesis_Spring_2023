################################################################################
#                                 BERT
################################################################################
rm(list = ls())
tensorflow::install_tensorflow(version = "1.13.1")
library(vader)
library(tidyverse)
library(DescTools)
library(RBERT)
setwd("C:/Users/marku/OneDrive/Skrivebord/MASTEROPPGAVE/Master_thesis/GITHUB REPOSITORY/Master_Thesis_Spring_2023/Data/")
# Load data:
meta <- readRDS("regressions/meta_GPT_ML_LM_regression.rds")
meta <- meta[1:10,]
# Download pre-trained BERT model. This will go to an appropriate cache
# directory by default.
BERT_PRETRAINED_DIR <- RBERT::download_BERT_checkpoint(
model = "bert_base_uncased"
)
BERT_feats <- extract_features(
examples = meta$text,
ckpt_dir = BERT_PRETRAINED_DIR,
layer_indexes = 1:12
)
install.packages("LiblineaR")
install.packages("tidymodels")
install.packages("tidymodels")
library(rsample)
reticulate::py_install('transformers', pip = TRUE)
# Import Python packages:
transformer = reticulate::import('transformers')
tf = reticulate::import('tensorflow')
reticulate::py_install('tensorflow')
tf = reticulate::import('tensorflow')
builtins <- import_builtins() #built in python methods
install.packages("builtins")
builtins <- import_builtins() #built in python methods
# Load data:
meta <- readRDS("regressions/meta_GPT_ML_LM_regression.rds")
meta <- meta[1:10,]
meta
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
# Load data:
meta <- readRDS("regressions/meta_GPT_ML_LM_regression.rds")
meta <- meta[100:200,]
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
# Load data:
meta <- readRDS("regressions/meta_GPT_ML_LM_regression.rds")
meta <- meta[100:300,]
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
meta <- meta[100:400,]
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
View(meta)
# Load data:
meta <- readRDS("fromR/metaAdj_v4.rds")
meta <- meta[100:400,]
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
train_encodings = tokenizer(metaTraining$text, truncation=TRUE, padding=TRUE,max_length=250L)
reticulate::py_install('builtins')
builtins <- import_builtins() #built in python methods
builtins <- reticulate::import_builtins() #built in python methods
# Load data:
meta <- readRDS("fromR/metaAdj_v4.rds")
meta <- meta[100:400,]
metaTraining <- meta %>%
filter(group == "training")
metaTest <- meta %>%
filter(group == "holdout")
train_encodings = tokenizer(metaTraining$text, truncation=TRUE, padding=TRUE,max_length=250L)
train_encodings = tokenize(metaTraining$text, truncation=TRUE, padding=TRUE,max_length=250L)
train_encodings = RBERT::tokenize(metaTraining$text, truncation=TRUE, padding=TRUE,max_length=250L)
train_encodings = tokenize(metaTraining$text)
